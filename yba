local canSell = {
    "Rokakaka",
    "Pure Rokakaka",
    "Diamond",
    "Dio's Diary",
    "Steel Ball",
    "Rib Cage of The Saint's Corpse",
    "Stone Mask",
    "Gold Coin",
    "Quinton's Glove",
    "Ancient Scroll",
    "Caesar's Headband",
    "Mysterious Arrow",
    "Zeppeli's Hat",
    "Clackers"
}

local OldNamecallTP
OldNamecallTP = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local Arguments = {...}
    local Method = getnamecallmethod()
    if Method == "InvokeServer" and Arguments[1] == "idklolbrah2de" then
        return "  ___XP DE KEY"
    end
    if (Method == "FireServer" or Method == "InvokeServer" or Method == "InvokeClient") and Arguments[1] == "Reset" and Arguments[3] ~= "kissinthehomiesgoodnight" then
        return wait(9e9)
    end

    return OldNamecallTP(self, ...)
end))

local itemHook;
itemHook = hookfunction(getrawmetatable(game.Players.LocalPlayer.Character.HumanoidRootPart.Position).__index, function(p,i)
    if getcallingscript().Name == "ItemSpawn" and i:lower() == "magnitude" then
        return 0
    end
    return itemHook(p,i)
end)

function GetPlayer()
    return game:GetService("Players").LocalPlayer
end

function GetCharacter()
    local player = GetPlayer()
    return player and (player.Character or player.CharacterAdded:Wait())
end

local Prompt = game:GetService("CoreGui"):FindFirstChild("promptOverlay", true)
Prompt.ChildAdded:Connect(function(Child)
    if typeof(Child) == "Instance" and Child.Name == "ErrorPrompt" and Child.ClassName == "Frame" then
        local Error = Child:FindFirstChild("ErrorMessage", true)
        repeat task.wait() until Error.Text ~= "Label"
        if Error.Text:find("kick") or Error.Text:find("conn") or Error.Text:find("rejoin") then
            task.wait(1)
            game:GetService("TeleportService"):Teleport(2809202155, GetPlayer())
        end
    end
end)

if not GetPlayer().PlayerGui:FindFirstChild("HUD") then
    local HUD = game:GetService("ReplicatedStorage").Objects.HUD:Clone()
    HUD.Parent = GetPlayer().PlayerGui
end

GetCharacter():WaitForChild("RemoteEvent"):FireServer("PressedPlay")

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
end)   

task.wait(.5)

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen"):Destroy()
end)

pcall(function()
    workspace.LoadingScreen.Song.Playing = false
end)

pcall(function()
    for i,v in pairs(game.Lighting:GetChildren()) do
        if v.Name == "DepthOfField" then
            v.Enabled = false
        end
    end
end)

local UserInputService = game:GetService("UserInputService")
local PlayerService = game:GetService("Players")
local LocalPlayer = GetPlayer()
local Character = GetCharacter()
local PlayerGui = LocalPlayer:FindFirstChild("PlayerGui")
local UndergroundAnimation, Highlight
function PlayAnimation(HumanoidCharacter, AnimationID, AnimationSpeed, Time)
    local CreatedAnimation = Instance.new("Animation")
    CreatedAnimation.AnimationId = AnimationID
    local animationTrack = HumanoidCharacter:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):LoadAnimation(CreatedAnimation)
    animationTrack:Play()
    animationTrack:AdjustSpeed(AnimationSpeed)
    animationTrack.Priority = Enum.AnimationPriority.Action4
    animationTrack.TimePosition = Time
    return animationTrack
end

local function Invisibile()
    local HUD = PlayerGui:FindFirstChild("HUD")
    if HUD then
        HUD.Parent = nil
    end
    UndergroundAnimation = PlayAnimation(Character, "rbxassetid://7189062263", 0, 5)
    LocalPlayer.Character = nil
    UndergroundAnimation:Stop()
    LocalPlayer.Character = Character
    if HUD then
        HUD.Parent = PlayerGui
    end
    Highlight = Instance.new("Highlight")
    Highlight.Parent = Character
    Highlight.Enabled = true
end


local LocalPlayer = GetPlayer()
local Character = GetCharacter()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local function TeleportToPlace(targetCFrame)
    for _, BasePart in pairs(Character:GetDescendants()) do
        if BasePart:IsA("BasePart") and BasePart.CanCollide then
            BasePart.CanCollide = false
        end
    end
    HumanoidRootPart.CFrame = targetCFrame
    task.wait(PickupDelay)
end

local function SellItems()
    if not autosell then return end
    local Player = GetPlayer()
    local Character = GetCharacter()
    local Humanoid = Character:FindFirstChild("Humanoid")
    if not Humanoid then
        print("Humanoid não encontrado.")
        return
    end
    for _, itemName in ipairs(canSell) do
        local Tool = Player.Backpack:FindFirstChild(itemName)
        if Tool then
            Humanoid:EquipTool(Tool)
            local RemoteEvent = Character:FindFirstChild("RemoteEvent")
            if RemoteEvent then
                RemoteEvent:FireServer("EndDialogue", {NPC = "Merchant", Option = "Option1", Dialogue = "Dialogue5"})
                print("Item " .. itemName .. " vendido com sucesso!")
                Tool:Destroy()
            else
                print("RemoteEvent não encontrado.")
            end
        end
    end
end

function noclip()
    local character = GetCharacter()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

local function LocateNextItem()
    for _, Item in pairs(workspace.Item_Spawns.Items:GetChildren()) do
        local ItemMeshPart = Item:FindFirstChild("MeshPart")
        local ProximityPrompt = Item:FindFirstChild("ProximityPrompt")

        if not ItemMeshPart or not ProximityPrompt then
            continue
        end
        if ItemMeshPart.Transparency == 1 then
            continue
        end
        return {
            ["ItemName"] = ProximityPrompt.ObjectText,
            ["ProximityPrompt"] = ProximityPrompt,
            ["CFrame"] = ItemMeshPart.CFrame,
            ["Instance"] = Item
        }
    end
end

Invisibile()
while AutoFarm do
    local TargetItem = LocateNextItem()
    if not TargetItem then
        TeleportToPlace(CFrame.new(math.random(-500, 500), 0, math.random(-500, 500)))
        task.wait()
    else
        TeleportToPlace(TargetItem.CFrame)
        if (HumanoidRootPart.Position - TargetItem.CFrame.Position).Magnitude <= 8 then
            fireproximityprompt(TargetItem.ProximityPrompt)
            task.wait(PickupDelay)
            TargetItem.Instance:Destroy()
        end
    end
end

