local stepSize = 750 -- 40 may be the max
local delay = 0.3 -- if 0 then instant kick
local itemHook;
itemHook = hookfunction(getrawmetatable(game.Players.LocalPlayer.Character.HumanoidRootPart.Position).__index, function(p,i)
    if getcallingscript().Name == "ItemSpawn" and i:lower() == "magnitude" then
        return 0
    end
    return itemHook(p,i)
end)

local OldNamecallTP
OldNamecallTP = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local Arguments = {...}
    local Method = getnamecallmethod()
    if Method == "InvokeServer" and Arguments[1] == "idklolbrah2de" then
        return "  ___XP DE KEY"
    end
    if (Method == "FireServer" or Method == "InvokeServer" or Method == "InvokeClient") and Arguments[1] == "Reset" and Arguments[3] ~= "kissinthehomiesgoodnight" then
        return wait(9e9)
    end

    return OldNamecallTP(self, ...)
end))


local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"


AllMods = {"UzuKee", "BLOODTARO", "Dxscape", "Myst_Ari", "eurycIea", "v_cks", "ezguap", "Tsuzutou", "ReferToWithered", "Illus0", "Pyreiz", "VoidedFlame", "ROUXABOUT", "mixeriiiiiing", "MichDrajo", "hayst4", "ElmoNYC", "Core_CorruptionF", "Brillcake", "AxionTheRevenant", "sammyj0n", "ViveLesPatat", "Zimvasion", "vertiify", "redfoxP", "cakesucker05", "00kamiMio", "itscanii", "SirDeviloper", "0nkka", "Ramdharam", "Olliebutheskenny", "cswag_code", "TwoGio", "KoleRTX2", "Wilpuri", "remendyy", "SpaceNuggies", "CrimsonBeheIit", "warycoolio"};
print('made by vangl')
function performAction()
local _place,_id = game.PlaceId, game.JobId
local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end

local Next; repeat
   local Servers = ListServers(Next)
   for i,v in next, Servers.data do
       if v.playing < v.maxPlayers and v.id ~= _id then
           local s,r = pcall(TPS.TeleportToPlaceInstance,TPS,_place,v.id,Player)
           if s then break end
       end
   end
   
   Next = Servers.nextPageCursor
until not Next
end

local timerStarted = false
local duration = 180

function startTimer()
    if timerStarted then return end
    timerStarted = true
    print("timer started")
    task.delay(duration, function()
        performAction()
        timerStarted = false
    end)
end
startTimer()


function GetPlayer()
    return game:GetService("Players").LocalPlayer
end

function GetCharacter()
    local player = GetPlayer()
    return player and (player.Character or player.CharacterAdded:Wait())
end

local SelectedItems = {}
for itemName, canSell in pairs(farmitems) do -- inserts the items from the table on another table (lol)
    if canSell then
        table.insert(SelectedItems, itemName)
    end
end

-- core funcs
function GetPlayer()
    return game:GetService("Players").LocalPlayer
end

function GetCharacter()
    local player = GetPlayer()
    return player and (player.Character or player.CharacterAdded:Wait())
end

for i, v in pairs(workspace.Map.Terrain:GetChildren()) do
    if v.Name == 'Rock' then
        v:Destroy()
    end
end

local Prompt = game:GetService("CoreGui"):FindFirstChild("promptOverlay", true)
Prompt.ChildAdded:Connect(function(Child)
    if typeof(Child) == "Instance" and Child.Name == "ErrorPrompt" and Child.ClassName == "Frame" then
        local Error = Child:FindFirstChild("ErrorMessage", true)
        repeat task.wait() until Error.Text ~= "Label"
        if Error.Text:find("kick") or Error.Text:find("conn") or Error.Text:find("rejoin") then
            task.wait(1)
            game:GetService("TeleportService"):Teleport(2809202155, GetPlayer())
        end
    end
end)

-- deletes loading shit
if not GetPlayer().PlayerGui:FindFirstChild("HUD") then
    local HUD = game:GetService("ReplicatedStorage").Objects.HUD:Clone()
    HUD.Parent = GetPlayer().PlayerGui
end

GetCharacter():WaitForChild("RemoteEvent"):FireServer("PressedPlay")

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
end)   

task.wait(.5)

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen"):Destroy()
end)

pcall(function()
    workspace.LoadingScreen.Song.Playing = false
end)

pcall(function()
    for i,v in pairs(game.Lighting:GetChildren()) do
        if v.Name == "DepthOfField" then
            v.Enabled = false
        end
    end
end)

local plr = GetPlayer()
game.Players.PlayerAdded:Connect(function(plr)
    if table.find(AllMods, plr.Name) then
        plr:Kick("Spotted a mod, rejoining..")
    end
end)

task.spawn(function()
    for _, plr in pairs(game.Players:GetPlayers()) do
        if table.find(AllMods, plr.Name) then
            plr:Kick("Spotted a mod, rejoining..")
        end
    end
end)

function checkAndPerformActionWhenNoRelevantItems()
    repeat
        wait()
    until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local itemsFolder = workspace:FindFirstChild("Item_Spawns") and workspace.Item_Spawns:FindFirstChild("Items")
    if not itemsFolder then
        print("Items folder not found")
        return
    end
    local foundRelevantItem = false
    for _, model in ipairs(itemsFolder:GetChildren()) do
        if model:IsA("Model") then
            local meshPart = model:FindFirstChildOfClass("MeshPart")
            if meshPart and meshPart.Transparency < 1 then
                local prompt = model:FindFirstChildOfClass("ProximityPrompt")
                if prompt and farmitems[prompt.ObjectText] then
                    foundRelevantItem = true
                    break
                end
            end
        end
    end
    if not foundRelevantItem then
        print("No relevant items found, performing action...")
        performAction()
    end
end

-- selling shit
local SelectedItems = {}
for itemName, canSell in pairs(farmitems) do -- inserts the items from the table on another table (lol)
    if canSell then
        table.insert(SelectedItems, itemName)
    end
end



-- funcs
function buyarrow()
    if not autobuyarrow then return end
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    local money = player.PlayerStats.Money.Value

    if not backpack then
        print("no backpack")
        return
    end
    local arrowcount = 0
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name == "Lucky Arrow" then
            arrowcount = arrowcount + 1
        end
    end

    if money >= 50000 then
        if arrowcount < 9 then
            player.Character.RemoteEvent:FireServer("PurchaseShopItem", {["ItemName"] = "1x Lucky Arrow"})
            print("bought arrow")
        else
            --print("u got 9 or more arrows")
        end
    else
       --print("no money")
    end
end


function noclip()
    local character = GetCharacter()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

local function SellItems()
    if not autosell then return end
    local Player = GetPlayer()
    local Character = GetCharacter()  
    local Humanoid = Character:FindFirstChild("Humanoid")
    if not Humanoid then
        print("Humanoid not found.")
        return
    end
    for _, itemName in ipairs(SelectedItems) do
        if Player and Character then
            local Tool = Player.Backpack:FindFirstChild(itemName)
            if Tool then
                Humanoid:EquipTool(Tool)
                local RemoteEvent = Character:FindFirstChild("RemoteEvent")
                if RemoteEvent then
                    RemoteEvent:FireServer("EndDialogue", {NPC = "Merchant", Option = "Option1", Dialogue = "Dialogue5"})
                else
                end
            else -- else end is fire
            end
        end
    end
end

function getTargetitem()
    local itemsFolder = workspace:FindFirstChild("Item_Spawns") and workspace.Item_Spawns:FindFirstChild("Items")
    if itemsFolder then
        for _, model in ipairs(itemsFolder:GetChildren()) do
            if model:IsA("Model") then
                local meshPart = model:FindFirstChildOfClass("MeshPart")
                if meshPart and meshPart.Transparency < 1 then
                    local prompt = model:FindFirstChildOfClass("ProximityPrompt")
                    if prompt and farmitems[prompt.ObjectText] then
                        return model
                    end
                end
            end
        end
    end
    return nil
end

function proximityfire(itemModel)
    local prompt = itemModel:FindFirstChildOfClass("ProximityPrompt")
    if prompt then
        prompt.RequiresLineOfSight = false
        prompt.HoldDuration = 0
        prompt.MaxActivationDistance = 30
        local character = GetCharacter()
        if character then
            local targetPosition = itemModel.PrimaryPart.Position
            while itemModel and itemModel.Parent == workspace.Item_Spawns.Items do
                if (character.PrimaryPart.Position - targetPosition).Magnitude <= 5 then
                    fireproximityprompt(prompt)
                    break
                end
                wait(0.1)
            end
        end
    end
end

function gotopos(targetPosition, stepSize, delay)
    local character = GetCharacter()
    if not character then
        warn("no character")
        return
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then
        warn("HumanoidRootPart not found")
        return
    end

    local startPosition = rootPart.Position
    local direction = (targetPosition - startPosition).Unit
    local distance = (targetPosition - startPosition).Magnitude
    local steps = math.ceil(distance / stepSize)
    for i = 1, steps do
        local nextPosition = startPosition + direction * math.min(stepSize * i, distance)
        rootPart.CFrame = CFrame.new(nextPosition)
        wait(delay)
    end
    rootPart.CFrame = CFrame.new(targetPosition)
end

function goto(targetPosition, stepSize, delay)
    local character = GetCharacter()
    if not character then
        warn("Character not found")
        return
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then
        warn("HumanoidRootPart not found")
        return
    end

    local startPosition = rootPart.Position
    local direction = (targetPosition - startPosition).Unit
    local distance = (targetPosition - startPosition).Magnitude
    local steps = math.ceil(distance / stepSize)

    for i = 1, steps do
        local targetItem = getTargetitem()
        if targetItem then
            gotopos(targetItem.PrimaryPart.Position, stepSize, delay)
            task.wait(PickupDelay)
            proximityfire(targetItem)
            return
        end
        local nextPosition = startPosition + direction * math.min(stepSize * i, distance)
        rootPart.CFrame = CFrame.new(nextPosition)
        wait(delay)
    end
    rootPart.CFrame = CFrame.new(targetPosition)
end

function randomcoords()
    local coords = {
        "-52.33298110961914, -26.00574493408203, 551.6788940429688",
        "93.92892456054688, -25.66295623779297, 293.0778503417969",
        "268.8160400390625, -26.00574493408203, 388.1003723144531",
        "270.8331298828125, -0.040000736713409424, 166.6999969482422",
        "482.2201232910156, 1.8499176502227783, -16.338184356689453",
        "565.6002807617188, -0.040000706911087036, -132.59974670410156",
        "447.7020568847656, 30.602828979492188, -282.7270812988281",
        "318.6097106933594, -0.040000706911087036, -435.56854248046875",
        "88.3239974975586, -0.04000064730644226, -432.5813903808594",
        "84.29206848144531, -0.04000067710876465, -130.682373046875",
        "-59.617027282714844, -0.040000736713409424, 80.03609466552734",
        "-265.5634460449219, -14.36223030090332, -185.51780700683594",
        "-426.0473937988281, -0.04000067710876465, -132.9180908203125",
        "-553.2474365234375, -25.79346466064453, -177.21652221679688",
        "-597.8355712890625, -26.00574493408203, -337.7140808105469",
        "-763.8015747070312, -26.0057430267334, -556.8303833007812",
        "-751.1814575195312, -26.0057430267334, -211.04067993164062",
        "-570.17822265625, -25.369131088256836, -664.0657958984375",
        "-565.275146484375, 9.985895156860352, -808.010498046875",
        "-389.9852294921875, 0.11698076128959656, -783.0131225585938",
        "-163.99301147460938, -0.04000064730644226, -646.8327026367188",
        "-45.70185470581055, 0.006818026304244995, -778.3753662109375"
    }
    local randomIndex = math.random(1, #coords)
    local coordStr = coords[randomIndex]
    local coordArray = {}
    for value in string.gmatch(coordStr, "([^,]+)") do
        table.insert(coordArray, tonumber(value))
    end
    return Vector3.new(coordArray[1], coordArray[2], coordArray[3])
end

-- core
while farming do
    if not farming then
        break
    end
    task.wait()
    pcall(noclip)
    pcall(SellItems)
    pcall(buyarrow)
    local randomCoord = randomcoords()
    if randomCoord then
        pcall(function()
            goto(randomCoord, stepSize, delay)        
        end)
    end
end
